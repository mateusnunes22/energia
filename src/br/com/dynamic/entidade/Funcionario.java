package br.com.dynamic.entidade;

// Generated 08/10/2014 05:47:29 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Funcionario generated by hbm2java
 */
@Entity
@Table(name = "funcionario", catalog = "energia", uniqueConstraints = @UniqueConstraint(columnNames = "nome"))
public class Funcionario implements java.io.Serializable {

	private FuncionarioId id;
	private Usuario usuario;
	private String nome;
	private String especialidade;
	private Set ordems = new HashSet(0);

	public Funcionario() {
	}

	public Funcionario(FuncionarioId id, Usuario usuario, String nome) {
		this.id = id;
		this.usuario = usuario;
		this.nome = nome;
	}

	public Funcionario(FuncionarioId id, Usuario usuario, String nome,
			String especialidade, Set ordems) {
		this.id = id;
		this.usuario = usuario;
		this.nome = nome;
		this.especialidade = especialidade;
		this.ordems = ordems;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idFuncionario", column = @Column(name = "idFuncionario", nullable = false)),
			@AttributeOverride(name = "usuarioIdUsuario", column = @Column(name = "Usuario_idUsuario", nullable = false)) })
	public FuncionarioId getId() {
		return this.id;
	}

	public void setId(FuncionarioId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Usuario_idUsuario", nullable = false, insertable = false, updatable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "nome", unique = true, nullable = false, length = 80)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "especialidade", length = 50)
	public String getEspecialidade() {
		return this.especialidade;
	}

	public void setEspecialidade(String especialidade) {
		this.especialidade = especialidade;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funcionario")
	public Set getOrdems() {
		return this.ordems;
	}

	public void setOrdems(Set ordems) {
		this.ordems = ordems;
	}

}
