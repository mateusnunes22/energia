package br.com.dynamic.entidade;

// Generated 08/10/2014 05:47:29 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Ordem generated by hbm2java
 */
@Entity
@Table(name = "ordem", catalog = "energia")
public class Ordem implements java.io.Serializable {

	private OrdemId id;
	private Cliente cliente;
	private Funcionario funcionario;
	private Date data;

	public Ordem() {
	}

	public Ordem(OrdemId id, Cliente cliente, Funcionario funcionario, Date data) {
		this.id = id;
		this.cliente = cliente;
		this.funcionario = funcionario;
		this.data = data;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idOrdem", column = @Column(name = "idOrdem", nullable = false)),
			@AttributeOverride(name = "funcionarioIdFuncionario", column = @Column(name = "Funcionario_idFuncionario", nullable = false)),
			@AttributeOverride(name = "funcionarioUsuarioIdUsuario", column = @Column(name = "Funcionario_Usuario_idUsuario", nullable = false)),
			@AttributeOverride(name = "clienteIdCliente", column = @Column(name = "Cliente_idCliente", nullable = false)),
			@AttributeOverride(name = "clienteUsuarioIdUsuario", column = @Column(name = "Cliente_Usuario_idUsuario", nullable = false)) })
	public OrdemId getId() {
		return this.id;
	}

	public void setId(OrdemId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "Cliente_idCliente", referencedColumnName = "idCliente", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "Cliente_Usuario_idUsuario", referencedColumnName = "Usuario_idUsuario", nullable = false, insertable = false, updatable = false) })
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "Funcionario_idFuncionario", referencedColumnName = "idFuncionario", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "Funcionario_Usuario_idUsuario", referencedColumnName = "Usuario_idUsuario", nullable = false, insertable = false, updatable = false) })
	public Funcionario getFuncionario() {
		return this.funcionario;
	}

	public void setFuncionario(Funcionario funcionario) {
		this.funcionario = funcionario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "data", nullable = false, length = 19)
	public Date getData() {
		return this.data;
	}

	public void setData(Date data) {
		this.data = data;
	}

}
